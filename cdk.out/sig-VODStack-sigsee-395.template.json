{
  "Resources": {
    "sigvodLogsBucketsigsee39534FB2F6C": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodLogsBucket-sigsee-395/Resource"
      }
    },
    "sigvodLogsBucketsigsee395Policy4410C33D": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodLogsBucketsigsee39534FB2F6C"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodLogsBucketsigsee39534FB2F6C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodLogsBucketsigsee39534FB2F6C",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodLogsBucket-sigsee-395/Policy/Resource"
      }
    },
    "sigvodLogsBucketsigsee395AutoDeleteObjectsCustomResource8B39CFE4": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodLogsBucketsigsee39534FB2F6C"
        }
      },
      "DependsOn": [
        "sigvodLogsBucketsigsee395Policy4410C33D"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodLogsBucket-sigsee-395/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "sigvodLogsBucketsigsee39534FB2F6C"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be",
        "aws:asset:property": "Code"
      }
    },
    "sigvodSourceBucketsigsee395Notifications4B3DEB9B": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodSourceBucketsigsee39581AAF5C2"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "sigvodcreateJobsigsee3957597DAD4",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "sigvodSourceBucketsigsee395AllowBucketNotificationsTosigVODStacksigsee395sigvodcreateJobsigsee39536E6453FB225268B"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodSourceBucket-sigsee-395/Notifications/Resource"
      }
    },
    "sigvodSourceBucketsigsee39581AAF5C2": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sigvodLogsBucketsigsee39534FB2F6C"
          },
          "LogFilePrefix": "source-bucket-logs"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodSourceBucket-sigsee-395/Resource"
      }
    },
    "sigvodSourceBucketsigsee395PolicyC422E90A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodSourceBucketsigsee39581AAF5C2"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodSourceBucketsigsee39581AAF5C2",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodSourceBucketsigsee39581AAF5C2",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodSourceBucket-sigsee-395/Policy/Resource"
      }
    },
    "sigvodSourceBucketsigsee395AutoDeleteObjectsCustomResource7EECBD42": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodSourceBucketsigsee39581AAF5C2"
        }
      },
      "DependsOn": [
        "sigvodSourceBucketsigsee395PolicyC422E90A"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodSourceBucket-sigsee-395/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "sigvodSourceBucketsigsee395AllowBucketNotificationsTosigVODStacksigsee395sigvodcreateJobsigsee39536E6453FB225268B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigvodcreateJobsigsee3957597DAD4",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "476324220602",
        "SourceArn": {
          "Fn::GetAtt": [
            "sigvodSourceBucketsigsee39581AAF5C2",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodSourceBucket-sigsee-395/AllowBucketNotificationsTosigVODStacksigsee395sigvodcreateJobsigsee39536E6453F"
      }
    },
    "sigvodDestinationBucketsigsee3955515AC89": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 0
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sigvodLogsBucketsigsee39534FB2F6C"
          },
          "LogFilePrefix": "destination-bucket-logs"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodDestinationBucket-sigsee-395/Resource"
      }
    },
    "sigvodDestinationBucketsigsee395Policy3015800A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodDestinationBucketsigsee3955515AC89"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodDestinationBucketsigsee3955515AC89",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodDestinationBucketsigsee3955515AC89",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodDestinationBucket-sigsee-395/Policy/Resource"
      }
    },
    "sigvodDestinationBucketsigsee395AutoDeleteObjectsCustomResourceBE71F83E": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodDestinationBucketsigsee3955515AC89"
        }
      },
      "DependsOn": [
        "sigvodDestinationBucketsigsee395Policy3015800A"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodDestinationBucket-sigsee-395/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "sigvodsigsee3950D13850C": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "videoId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "videoId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "TableName": "sig-vod-sigsee-395"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-sigsee-395/Resource"
      }
    },
    "sigvodMCJobRolesigsee39553C2704C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCJobRole-sigsee-395/Resource"
      }
    },
    "sigvodMCJobRolesigsee395DefaultPolicy774840F8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodSourceBucketsigsee39581AAF5C2",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodSourceBucketsigsee39581AAF5C2",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodDestinationBucketsigsee3955515AC89",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodDestinationBucketsigsee3955515AC89",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodMCJobRolesigsee395DefaultPolicy774840F8",
        "Roles": [
          {
            "Ref": "sigvodMCJobRolesigsee39553C2704C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCJobRole-sigsee-395/DefaultPolicy/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee395ServiceRole4B496E5B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getMCEndpoints-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee395ServiceRoleDefaultPolicy6140EBAC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "mediaConvert:DescribeEndpoints",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":endpoints/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodgetMCEndpointssigsee395ServiceRoleDefaultPolicy6140EBAC",
        "Roles": [
          {
            "Ref": "sigvodgetMCEndpointssigsee395ServiceRole4B496E5B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getMCEndpoints-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee395DE763E13": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "5032faa1893ebe05ed3bb8a945a7aec444519105344c3950d5c0308b32e5cf9e.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodgetMCEndpointssigsee395ServiceRole4B496E5B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vodMediaConvert-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodgetMCEndpointssigsee395ServiceRoleDefaultPolicy6140EBAC",
        "sigvodgetMCEndpointssigsee395ServiceRole4B496E5B"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getMCEndpoints-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodMCPJobRolesigsee3951157F267": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCPJobRole-sigsee-395/Resource"
      }
    },
    "sigvodMCPJobRolesigsee395DefaultPolicy8FC02628": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "sigvodgetMCEndpointssigsee395DE763E13",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodMCPJobRolesigsee395DefaultPolicy8FC02628",
        "Roles": [
          {
            "Ref": "sigvodMCPJobRolesigsee3951157F267"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCPJobRole-sigsee-395/DefaultPolicy/Resource"
      }
    },
    "sigvodMCProvidersigsee395frameworkonEventE22D91EF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodMCPJobRolesigsee3951157F267",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (sig-VODStack-sigsee-395/sig-vodMCProvider-sigsee-395)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "sigvodgetMCEndpointssigsee395DE763E13",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Timeout": 900
      },
      "DependsOn": [
        "sigvodMCPJobRolesigsee395DefaultPolicy8FC02628",
        "sigvodMCPJobRolesigsee3951157F267"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCProvider-sigsee-395/framework-onEvent/Resource",
        "aws:asset:path": "asset.598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sigvodMCProviderResourcesigsee395": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "sigvodMCProvidersigsee395frameworkonEventE22D91EF",
            "Arn"
          ]
        },
        "project": "sig",
        "stage": "sigsee-395"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vodMCProviderResource-sigsee-395/Default"
      }
    },
    "sigvodcreateJobsigsee395ServiceRole8957869C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-createJob-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigvodcreateJobsigsee395ServiceRoleDefaultPolicyDDAE57A4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":role/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "mediaConvert:CreateJob",
                "mediaConvert:GetJobTemplate"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":queues/Default"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":jobTemplates/System-Ott_Hls_Ts_Avc_Aac"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":presets/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee3950D13850C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodcreateJobsigsee395ServiceRoleDefaultPolicyDDAE57A4",
        "Roles": [
          {
            "Ref": "sigvodcreateJobsigsee395ServiceRole8957869C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-createJob-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodcreateJobsigsee3957597DAD4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "182fddd5a79b8bc05ab6577711d856e5da3f1d8122e1438140f640ac0cdbb7af.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodcreateJobsigsee395ServiceRole8957869C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "destinationS3BucketName": {
              "Ref": "sigvodDestinationBucketsigsee3955515AC89"
            },
            "roleName": {
              "Fn::GetAtt": [
                "sigvodMCJobRolesigsee39553C2704C",
                "Arn"
              ]
            },
            "endpoint": {
              "Fn::GetAtt": [
                "sigvodMCProviderResourcesigsee395",
                "endpointUrl"
              ]
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-createJob-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodcreateJobsigsee395ServiceRoleDefaultPolicyDDAE57A4",
        "sigvodcreateJobsigsee395ServiceRole8957869C"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-createJob-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "sigvodjobCompletesigsee395ServiceRoleA74348DA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-jobComplete-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigvodjobCompletesigsee395ServiceRoleDefaultPolicy77414550": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee3950D13850C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodjobCompletesigsee395ServiceRoleDefaultPolicy77414550",
        "Roles": [
          {
            "Ref": "sigvodjobCompletesigsee395ServiceRoleA74348DA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-jobComplete-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodjobCompletesigsee395CF21B37D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "0f738ba2ab8551923acf6376d3996ed6f68b7537644a1f2d28283b68a0f44b4b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodjobCompletesigsee395ServiceRoleA74348DA",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-jobComplete-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodjobCompletesigsee395ServiceRoleDefaultPolicy77414550",
        "sigvodjobCompletesigsee395ServiceRoleA74348DA"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-jobComplete-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodlistVideossigsee395ServiceRoleC25DF887": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-listVideos-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigvodlistVideossigsee395ServiceRoleDefaultPolicyAE58AF7B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee3950D13850C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodlistVideossigsee395ServiceRoleDefaultPolicyAE58AF7B",
        "Roles": [
          {
            "Ref": "sigvodlistVideossigsee395ServiceRoleC25DF887"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-listVideos-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodlistVideossigsee395FB8F3B2F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "63e93784c4d01a9b6d915e330c5b30bc07eea7a02d7881d7cd9b69168cf52891.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodlistVideossigsee395ServiceRoleC25DF887",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-listVideos-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodlistVideossigsee395ServiceRoleDefaultPolicyAE58AF7B",
        "sigvodlistVideossigsee395ServiceRoleC25DF887"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-listVideos-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodgetVideoByIdsigsee395ServiceRole58C46D67": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getVideoById-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigvodgetVideoByIdsigsee395ServiceRoleDefaultPolicyB7FBA598": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee3950D13850C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodgetVideoByIdsigsee395ServiceRoleDefaultPolicyB7FBA598",
        "Roles": [
          {
            "Ref": "sigvodgetVideoByIdsigsee395ServiceRole58C46D67"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getVideoById-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodgetVideoByIdsigsee395D8D21DB9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "4c3efc529652a72d7804dd5d3325522fa9fe1894a7ab911cd8708448985f180b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodgetVideoByIdsigsee395ServiceRole58C46D67",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-getVideoById-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodgetVideoByIdsigsee395ServiceRoleDefaultPolicyB7FBA598",
        "sigvodgetVideoByIdsigsee395ServiceRole58C46D67"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/sig-vod-getVideoById-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQwW7DIBBEvyV3vK2bHHptIvUYWW7vFgYarW1AYiFVZPHvNWA76mneDrMM4g1O8Hrgv1QJOVYT9jB/eS5GtljdTEeYz0GMyrPLj1mpSGMnFI+nvc5lOHNSkU1c95LDvGQa5TQSoTVp4zMY4RNvEJl8GK6tXOq/eT+plMoQGXINc2uLl/VZXWhr6oyVaiC4ZtlL6NhxIuUJPpJEdgnkrW4V2eBEuXbnf0eNs3eUyrG8uPzLDc2N7WGRw51bZ4ItH1l6CQz0cq9PUL9DfRgIsXLBeNQK2qJ/HUCLXHwBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-395/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}