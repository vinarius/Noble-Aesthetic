{
  "Resources": {
    "sigvodLogsBucketsigsee370117023FD": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodLogsBucket-sigsee-370/Resource"
      }
    },
    "sigvodLogsBucketsigsee370PolicyBE495A55": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodLogsBucketsigsee370117023FD"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodLogsBucketsigsee370117023FD",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodLogsBucketsigsee370117023FD",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodLogsBucket-sigsee-370/Policy/Resource"
      }
    },
    "sigvodLogsBucketsigsee370AutoDeleteObjectsCustomResourceD4546C8F": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodLogsBucketsigsee370117023FD"
        }
      },
      "DependsOn": [
        "sigvodLogsBucketsigsee370PolicyBE495A55"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodLogsBucket-sigsee-370/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "sigvodLogsBucketsigsee370117023FD"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be",
        "aws:asset:property": "Code"
      }
    },
    "sigvodSourceBucketsigsee370NotificationsA4D14410": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodSourceBucketsigsee3706B7FE751"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "sigvodcreateJobsigsee370C7C8F2DE",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "sigvodSourceBucketsigsee370AllowBucketNotificationsTosigVODStacksigsee370sigvodcreateJobsigsee3701ABFD45F7F4E21F4"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodSourceBucket-sigsee-370/Notifications/Resource"
      }
    },
    "sigvodSourceBucketsigsee3706B7FE751": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sigvodLogsBucketsigsee370117023FD"
          },
          "LogFilePrefix": "source-bucket-logs"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodSourceBucket-sigsee-370/Resource"
      }
    },
    "sigvodSourceBucketsigsee370PolicyA81D6C7C": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodSourceBucketsigsee3706B7FE751"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodSourceBucketsigsee3706B7FE751",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodSourceBucketsigsee3706B7FE751",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodSourceBucket-sigsee-370/Policy/Resource"
      }
    },
    "sigvodSourceBucketsigsee370AutoDeleteObjectsCustomResourceB531FCB9": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodSourceBucketsigsee3706B7FE751"
        }
      },
      "DependsOn": [
        "sigvodSourceBucketsigsee370PolicyA81D6C7C"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodSourceBucket-sigsee-370/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "sigvodSourceBucketsigsee370AllowBucketNotificationsTosigVODStacksigsee370sigvodcreateJobsigsee3701ABFD45F7F4E21F4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigvodcreateJobsigsee370C7C8F2DE",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "476324220602",
        "SourceArn": {
          "Fn::GetAtt": [
            "sigvodSourceBucketsigsee3706B7FE751",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodSourceBucket-sigsee-370/AllowBucketNotificationsTosigVODStacksigsee370sigvodcreateJobsigsee3701ABFD45F"
      }
    },
    "sigvodDestinationBucketsigsee370F6C1575E": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 0
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sigvodLogsBucketsigsee370117023FD"
          },
          "LogFilePrefix": "destination-bucket-logs"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodDestinationBucket-sigsee-370/Resource"
      }
    },
    "sigvodDestinationBucketsigsee370Policy3AE12A4F": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "sigvodDestinationBucketsigsee370F6C1575E"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodDestinationBucketsigsee370F6C1575E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodDestinationBucketsigsee370F6C1575E",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodDestinationBucket-sigsee-370/Policy/Resource"
      }
    },
    "sigvodDestinationBucketsigsee370AutoDeleteObjectsCustomResourceEAB421F4": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "sigvodDestinationBucketsigsee370F6C1575E"
        }
      },
      "DependsOn": [
        "sigvodDestinationBucketsigsee370Policy3AE12A4F"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodDestinationBucket-sigsee-370/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "sigvodsigsee370E260EA1C": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "videoId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "videoId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "TableName": "sig-vod-sigsee-370"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-sigsee-370/Resource"
      }
    },
    "sigvodMCJobRolesigsee370C7307FE1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCJobRole-sigsee-370/Resource"
      }
    },
    "sigvodMCJobRolesigsee370DefaultPolicyB39657E5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodSourceBucketsigsee3706B7FE751",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodSourceBucketsigsee3706B7FE751",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodDestinationBucketsigsee370F6C1575E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "sigvodDestinationBucketsigsee370F6C1575E",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodMCJobRolesigsee370DefaultPolicyB39657E5",
        "Roles": [
          {
            "Ref": "sigvodMCJobRolesigsee370C7307FE1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCJobRole-sigsee-370/DefaultPolicy/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee370ServiceRoleB0D1A444": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getMCEndpoints-sigsee-370/ServiceRole/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee370ServiceRoleDefaultPolicy8982DB2B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "mediaConvert:DescribeEndpoints",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":endpoints/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodgetMCEndpointssigsee370ServiceRoleDefaultPolicy8982DB2B",
        "Roles": [
          {
            "Ref": "sigvodgetMCEndpointssigsee370ServiceRoleB0D1A444"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getMCEndpoints-sigsee-370/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodgetMCEndpointssigsee370FA5CAF06": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "bb959570fed8a93becb101993ddc4b601fbab634c625c91bc1bb027821264acd.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodgetMCEndpointssigsee370ServiceRoleB0D1A444",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vodMediaConvert-sigsee-370",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodgetMCEndpointssigsee370ServiceRoleDefaultPolicy8982DB2B",
        "sigvodgetMCEndpointssigsee370ServiceRoleB0D1A444"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getMCEndpoints-sigsee-370/Resource",
        "aws:asset:path": "asset.bb959570fed8a93becb101993ddc4b601fbab634c625c91bc1bb027821264acd",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodMCPJobRolesigsee3704FC806FC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCPJobRole-sigsee-370/Resource"
      }
    },
    "sigvodMCPJobRolesigsee370DefaultPolicy64388382": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "sigvodgetMCEndpointssigsee370FA5CAF06",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodMCPJobRolesigsee370DefaultPolicy64388382",
        "Roles": [
          {
            "Ref": "sigvodMCPJobRolesigsee3704FC806FC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCPJobRole-sigsee-370/DefaultPolicy/Resource"
      }
    },
    "sigvodMCProvidersigsee370frameworkonEvent5FA2C1A4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodMCPJobRolesigsee3704FC806FC",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (sig-VODStack-sigsee-370/sig-vodMCProvider-sigsee-370)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "sigvodgetMCEndpointssigsee370FA5CAF06",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Timeout": 900
      },
      "DependsOn": [
        "sigvodMCPJobRolesigsee370DefaultPolicy64388382",
        "sigvodMCPJobRolesigsee3704FC806FC"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCProvider-sigsee-370/framework-onEvent/Resource",
        "aws:asset:path": "asset.598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sigvodMCProviderResourcesigsee370": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "sigvodMCProvidersigsee370frameworkonEvent5FA2C1A4",
            "Arn"
          ]
        },
        "project": "sig",
        "stage": "sigsee-370"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vodMCProviderResource-sigsee-370/Default"
      }
    },
    "sigconvertCompleteRulesigsee370B60F765E": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "EventBridge rule used to trigger the vod-jobComplete lambda",
        "EventPattern": {
          "source": [
            "aws.mediaconvert"
          ],
          "detail-type": [
            "MediaConvert Job State Change"
          ],
          "detail": {
            "status": [
              "COMPLETE",
              "ERROR"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "sigvodjobCompletesigsee37038CB38C3",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-convertCompleteRule-sigsee-370/Resource"
      }
    },
    "sigconvertCompleteRulesigsee370AllowEventRulesigVODStacksigsee370sigvodjobCompletesigsee37060D9B105C28EC5BD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigvodjobCompletesigsee37038CB38C3",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "sigconvertCompleteRulesigsee370B60F765E",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-convertCompleteRule-sigsee-370/AllowEventRulesigVODStacksigsee370sigvodjobCompletesigsee37060D9B105"
      }
    },
    "sigMCTopicsigsee37096940B98": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "sig-MCTopic-sigsee-370"
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-MCTopic-sigsee-370/Resource"
      }
    },
    "sigMCTopicsigsee370markitservioBBAE7489": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "sigMCTopicsigsee37096940B98"
        },
        "Endpoint": "mark@itserv.io"
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-MCTopic-sigsee-370/mark@itserv.io/Resource"
      }
    },
    "sigvodcreateJobsigsee370ServiceRole82F2689C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-createJob-sigsee-370/ServiceRole/Resource"
      }
    },
    "sigvodcreateJobsigsee370ServiceRoleDefaultPolicy5760F433": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":role/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "mediaConvert:CreateJob",
                "mediaConvert:GetJobTemplate"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":queues/Default"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":jobTemplates/System-Ott_Hls_Ts_Avc_Aac"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":mediaconvert:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":presets/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee370E260EA1C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodcreateJobsigsee370ServiceRoleDefaultPolicy5760F433",
        "Roles": [
          {
            "Ref": "sigvodcreateJobsigsee370ServiceRole82F2689C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-createJob-sigsee-370/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodcreateJobsigsee370C7C8F2DE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "28c8146bb650c0d34a5607304bc05fc7c11434bf0160f43b6058c4d9a88e1269.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodcreateJobsigsee370ServiceRole82F2689C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "destinationS3BucketName": {
              "Ref": "sigvodDestinationBucketsigsee370F6C1575E"
            },
            "roleName": {
              "Fn::GetAtt": [
                "sigvodMCJobRolesigsee370C7307FE1",
                "Arn"
              ]
            },
            "endpoint": {
              "Fn::GetAtt": [
                "sigvodMCProviderResourcesigsee370",
                "endpointUrl"
              ]
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-createJob-sigsee-370",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodcreateJobsigsee370ServiceRoleDefaultPolicy5760F433",
        "sigvodcreateJobsigsee370ServiceRole82F2689C"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-createJob-sigsee-370/Resource",
        "aws:asset:path": "asset.28c8146bb650c0d34a5607304bc05fc7c11434bf0160f43b6058c4d9a88e1269",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "sigvodjobCompletesigsee370ServiceRoleC69AC644": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-jobComplete-sigsee-370/ServiceRole/Resource"
      }
    },
    "sigvodjobCompletesigsee370ServiceRoleDefaultPolicyC7DE8624": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee370E260EA1C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodjobCompletesigsee370ServiceRoleDefaultPolicyC7DE8624",
        "Roles": [
          {
            "Ref": "sigvodjobCompletesigsee370ServiceRoleC69AC644"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-jobComplete-sigsee-370/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodjobCompletesigsee37038CB38C3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "09b17f59df6e2d0905890aaaa6c045df7de1588f593c69cf86e3d93b935684ad.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodjobCompletesigsee370ServiceRoleC69AC644",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "topicArn": {
              "Ref": "sigMCTopicsigsee37096940B98"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-jobComplete-sigsee-370",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodjobCompletesigsee370ServiceRoleDefaultPolicyC7DE8624",
        "sigvodjobCompletesigsee370ServiceRoleC69AC644"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-jobComplete-sigsee-370/Resource",
        "aws:asset:path": "asset.09b17f59df6e2d0905890aaaa6c045df7de1588f593c69cf86e3d93b935684ad",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodlistVideossigsee370ServiceRoleA99854F2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-listVideos-sigsee-370/ServiceRole/Resource"
      }
    },
    "sigvodlistVideossigsee370ServiceRoleDefaultPolicy7E3F415B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee370E260EA1C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodlistVideossigsee370ServiceRoleDefaultPolicy7E3F415B",
        "Roles": [
          {
            "Ref": "sigvodlistVideossigsee370ServiceRoleA99854F2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-listVideos-sigsee-370/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodlistVideossigsee370FAB4EC95": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "9f110c5afc1308d22858abbaa3bf0713ad20611289d579551a557b79ba0a6c66.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodlistVideossigsee370ServiceRoleA99854F2",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-listVideos-sigsee-370",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodlistVideossigsee370ServiceRoleDefaultPolicy7E3F415B",
        "sigvodlistVideossigsee370ServiceRoleA99854F2"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-listVideos-sigsee-370/Resource",
        "aws:asset:path": "asset.9f110c5afc1308d22858abbaa3bf0713ad20611289d579551a557b79ba0a6c66",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigvodgetVideoByIdsigsee370ServiceRole94270955": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getVideoById-sigsee-370/ServiceRole/Resource"
      }
    },
    "sigvodgetVideoByIdsigsee370ServiceRoleDefaultPolicyC6DF8D72": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "sigvodsigsee370E260EA1C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigvodgetVideoByIdsigsee370ServiceRoleDefaultPolicyC6DF8D72",
        "Roles": [
          {
            "Ref": "sigvodgetVideoByIdsigsee370ServiceRole94270955"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getVideoById-sigsee-370/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigvodgetVideoByIdsigsee370177366D6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "9f110c5afc1308d22858abbaa3bf0713ad20611289d579551a557b79ba0a6c66.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigvodgetVideoByIdsigsee370ServiceRole94270955",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-vod-getVideoById-sigsee-370",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigvodgetVideoByIdsigsee370ServiceRoleDefaultPolicyC6DF8D72",
        "sigvodgetVideoByIdsigsee370ServiceRole94270955"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/sig-vod-getVideoById-sigsee-370/Resource",
        "aws:asset:path": "asset.9f110c5afc1308d22858abbaa3bf0713ad20611289d579551a557b79ba0a6c66",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy27DIBD8ltzxtmly6LWJ1GNlOblbGGiEbSBiwVVk8e/lYTvtaR4MOwtvcITXHf3BivGhGmUH88VRNpBotTMeYD55NghHzt96YQVqM0r2eNqLLuJEUQQyUtVxCnPM1MIqiSiNTjc+vWYu8ZUEwh+aKsNj/ZV2o0ipTAKRVMHcmOJlfFYXtja12nDRI3xl2Erw0FJE4RA+EhAxCR3F3Phlpk81qKN1NXfJcncmF98hs/Lulr3/6hDI2aMzqhFovGVl1Mb/HdXWTJILS/IC8X9vUt/IFmY53NpFI6z5QNKLoMeXaX+E/Tvsdz1KWVmvnVQCmoK/X849oMQBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "sig-VODStack-sigsee-370/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}