{
  "Parameters": {
    "siguserPoolArnParamsigsee395Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/sig/cognitoStack/userPoolArn/sigsee-395"
    },
    "siguserPoolIdParamsigsee395Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/sig/cognitoStack/userPoolId/sigsee-395"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Resources": {
    "sigusersadminCreateUsersigsee395ServiceRole67C72A03": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminCreateUser-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersadminCreateUsersigsee395ServiceRoleDefaultPolicy71DC8D62": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:ListUsers",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersadminCreateUsersigsee395ServiceRoleDefaultPolicy71DC8D62",
        "Roles": [
          {
            "Ref": "sigusersadminCreateUsersigsee395ServiceRole67C72A03"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminCreateUser-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersadminCreateUsersigsee395220C2F35": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "251e99e5092fd94089cc2760a90bcaed60a7ec70188b6c959f5e6bc25628c3c8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersadminCreateUsersigsee395ServiceRole67C72A03",
            "Arn"
          ]
        },
        "Description": "Create a user as an admin. Does not require a confirmation code.",
        "Environment": {
          "Variables": {
            "userPoolId": {
              "Ref": "siguserPoolIdParamsigsee395Parameter"
            },
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-adminCreateUser-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersadminCreateUsersigsee395ServiceRoleDefaultPolicy71DC8D62",
        "sigusersadminCreateUsersigsee395ServiceRole67C72A03"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminCreateUser-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersadminCreateUsersigsee395LogRetention762EEF39": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersadminCreateUsersigsee395220C2F35"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminCreateUser-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersadminCreateUsersigsee395sigadminCreateUserInvokePermissionsigsee39542A5ECE5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersadminCreateUsersigsee395220C2F35",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminCreateUser-sigsee-395/sig-adminCreateUser-InvokePermission-sigsee-395"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
        "aws:asset:path": "asset.6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sigusersadminDeleteByIdsigsee395ServiceRoleD0B7B38F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminDeleteById-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersadminDeleteByIdsigsee395ServiceRoleDefaultPolicy201DA2CD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminDeleteUser",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersadminDeleteByIdsigsee395ServiceRoleDefaultPolicy201DA2CD",
        "Roles": [
          {
            "Ref": "sigusersadminDeleteByIdsigsee395ServiceRoleD0B7B38F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminDeleteById-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersadminDeleteByIdsigsee395704D9B3A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "8570d566964f38fd83ee7cb093a7352d928364be05934590f1707b32fc5bc511.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersadminDeleteByIdsigsee395ServiceRoleD0B7B38F",
            "Arn"
          ]
        },
        "Description": "Delete a user as an admin. Does not require a confirmation code.",
        "Environment": {
          "Variables": {
            "userPoolId": {
              "Ref": "siguserPoolIdParamsigsee395Parameter"
            },
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-adminDeleteById-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersadminDeleteByIdsigsee395ServiceRoleDefaultPolicy201DA2CD",
        "sigusersadminDeleteByIdsigsee395ServiceRoleD0B7B38F"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminDeleteById-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersadminDeleteByIdsigsee395LogRetentionBD683D82": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersadminDeleteByIdsigsee395704D9B3A"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminDeleteById-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersadminDeleteByIdsigsee395sigadminDeleteByIdInvokePermissionsigsee395144104C3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersadminDeleteByIdsigsee395704D9B3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminDeleteById-sigsee-395/sig-adminDeleteById-InvokePermission-sigsee-395"
      }
    },
    "sigusersadminResetPasswordByIdsigsee395ServiceRoleAB378126": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminResetPasswordById-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersadminResetPasswordByIdsigsee395ServiceRoleDefaultPolicy36AE8E67": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminResetUserPassword",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersadminResetPasswordByIdsigsee395ServiceRoleDefaultPolicy36AE8E67",
        "Roles": [
          {
            "Ref": "sigusersadminResetPasswordByIdsigsee395ServiceRoleAB378126"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminResetPasswordById-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersadminResetPasswordByIdsigsee395ACB5F0A7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "6359bd3215d15f7150c4b268cf6cde790cfa7d61797e63c84412721833d20063.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersadminResetPasswordByIdsigsee395ServiceRoleAB378126",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "userPoolId": {
              "Ref": "siguserPoolIdParamsigsee395Parameter"
            },
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-adminResetPasswordById-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersadminResetPasswordByIdsigsee395ServiceRoleDefaultPolicy36AE8E67",
        "sigusersadminResetPasswordByIdsigsee395ServiceRoleAB378126"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminResetPasswordById-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersadminResetPasswordByIdsigsee395LogRetention85EC800F": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersadminResetPasswordByIdsigsee395ACB5F0A7"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminResetPasswordById-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersadminResetPasswordByIdsigsee395sigadminResetPasswordByIdInvokePermissionsigsee395B0D495F0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersadminResetPasswordByIdsigsee395ACB5F0A7",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-adminResetPasswordById-sigsee-395/sig-adminResetPasswordById-InvokePermission-sigsee-395"
      }
    },
    "siguserschangePasswordsigsee395ServiceRoleF7451566": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-changePassword-sigsee-395/ServiceRole/Resource"
      }
    },
    "siguserschangePasswordsigsee395ServiceRoleDefaultPolicyD055E30B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:ChangePassword",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "siguserschangePasswordsigsee395ServiceRoleDefaultPolicyD055E30B",
        "Roles": [
          {
            "Ref": "siguserschangePasswordsigsee395ServiceRoleF7451566"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-changePassword-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "siguserschangePasswordsigsee395CCDCCC73": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "fa14757aa5afb2562fb86683c5a81b80fa3506284f9f43baf9d654806317448a.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "siguserschangePasswordsigsee395ServiceRoleF7451566",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-changePassword-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "siguserschangePasswordsigsee395ServiceRoleDefaultPolicyD055E30B",
        "siguserschangePasswordsigsee395ServiceRoleF7451566"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-changePassword-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "siguserschangePasswordsigsee395LogRetentionF0193A27": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "siguserschangePasswordsigsee395CCDCCC73"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-changePassword-sigsee-395/LogRetention/Resource"
      }
    },
    "siguserschangePasswordsigsee395sigchangePasswordInvokePermissionsigsee39526F4D38E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "siguserschangePasswordsigsee395CCDCCC73",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-changePassword-sigsee-395/sig-changePassword-InvokePermission-sigsee-395"
      }
    },
    "sigusersconfirmForgotPasswordsigsee395ServiceRole58921CBC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmForgotPassword-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersconfirmForgotPasswordsigsee395ServiceRoleDefaultPolicyC4FACF78": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:ConfirmForgotPassword",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersconfirmForgotPasswordsigsee395ServiceRoleDefaultPolicyC4FACF78",
        "Roles": [
          {
            "Ref": "sigusersconfirmForgotPasswordsigsee395ServiceRole58921CBC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmForgotPassword-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersconfirmForgotPasswordsigsee39575085B12": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "d6cc918a6f1a97516ea2a90b154ef323df76e9be12b5ad26f6961e167f34c07e.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersconfirmForgotPasswordsigsee395ServiceRole58921CBC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-confirmForgotPassword-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersconfirmForgotPasswordsigsee395ServiceRoleDefaultPolicyC4FACF78",
        "sigusersconfirmForgotPasswordsigsee395ServiceRole58921CBC"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmForgotPassword-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersconfirmForgotPasswordsigsee395LogRetention28DE20AF": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersconfirmForgotPasswordsigsee39575085B12"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmForgotPassword-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersconfirmForgotPasswordsigsee395sigconfirmForgotPasswordInvokePermissionsigsee395F461B5A6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersconfirmForgotPasswordsigsee39575085B12",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmForgotPassword-sigsee-395/sig-confirmForgotPassword-InvokePermission-sigsee-395"
      }
    },
    "sigusersconfirmSignUpsigsee395ServiceRole7C0D33A9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmSignUp-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersconfirmSignUpsigsee395ServiceRoleDefaultPolicy0397220D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cognito-idp:ConfirmSignUp",
                "cognito-idp:AdminGetUser"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersconfirmSignUpsigsee395ServiceRoleDefaultPolicy0397220D",
        "Roles": [
          {
            "Ref": "sigusersconfirmSignUpsigsee395ServiceRole7C0D33A9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmSignUp-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersconfirmSignUpsigsee39519C6EACA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "e3b280928d0cd8603f6c055ea0ecf3232fd770304ee2eaee9231d482d92180b0.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersconfirmSignUpsigsee395ServiceRole7C0D33A9",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "userPoolId": {
              "Ref": "siguserPoolIdParamsigsee395Parameter"
            },
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-confirmSignUp-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersconfirmSignUpsigsee395ServiceRoleDefaultPolicy0397220D",
        "sigusersconfirmSignUpsigsee395ServiceRole7C0D33A9"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmSignUp-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersconfirmSignUpsigsee395LogRetention08AC82C1": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersconfirmSignUpsigsee39519C6EACA"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmSignUp-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersconfirmSignUpsigsee395sigconfirmSignUpInvokePermissionsigsee3955C8C5B76": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersconfirmSignUpsigsee39519C6EACA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-confirmSignUp-sigsee-395/sig-confirmSignUp-InvokePermission-sigsee-395"
      }
    },
    "sigusersforgotPasswordsigsee395ServiceRole1AC1D023": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-forgotPassword-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersforgotPasswordsigsee395ServiceRoleDefaultPolicyE9A214A8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:ForgotPassword",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersforgotPasswordsigsee395ServiceRoleDefaultPolicyE9A214A8",
        "Roles": [
          {
            "Ref": "sigusersforgotPasswordsigsee395ServiceRole1AC1D023"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-forgotPassword-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersforgotPasswordsigsee395E14DC9EB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "0758575318833bb9d4ce4f523472b3274aabea4f914500cf874e18ee60abc71b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersforgotPasswordsigsee395ServiceRole1AC1D023",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-forgotPassword-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersforgotPasswordsigsee395ServiceRoleDefaultPolicyE9A214A8",
        "sigusersforgotPasswordsigsee395ServiceRole1AC1D023"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-forgotPassword-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersforgotPasswordsigsee395LogRetention7520987B": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersforgotPasswordsigsee395E14DC9EB"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-forgotPassword-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersforgotPasswordsigsee395sigforgotPasswordInvokePermissionsigsee395146BC70C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersforgotPasswordsigsee395E14DC9EB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-forgotPassword-sigsee-395/sig-forgotPassword-InvokePermission-sigsee-395"
      }
    },
    "sigusersgetsigsee395ServiceRole1CDB79C4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-get-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersgetsigsee395ServiceRoleDefaultPolicyDFA66C29": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersgetsigsee395ServiceRoleDefaultPolicyDFA66C29",
        "Roles": [
          {
            "Ref": "sigusersgetsigsee395ServiceRole1CDB79C4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-get-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersgetsigsee39542F58852": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "fe38f0f3dd621135895a8bf525652c68591832fa904c529df4e1846028cf5545.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersgetsigsee395ServiceRole1CDB79C4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-get-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersgetsigsee395ServiceRoleDefaultPolicyDFA66C29",
        "sigusersgetsigsee395ServiceRole1CDB79C4"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-get-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersgetsigsee395LogRetention3B45183D": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersgetsigsee39542F58852"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-get-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersgetsigsee395siggetInvokePermissionsigsee3951E57E116": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersgetsigsee39542F58852",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-get-sigsee-395/sig-get-InvokePermission-sigsee-395"
      }
    },
    "sigusersgetByIdsigsee395ServiceRoleEB97FDFE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-getById-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersgetByIdsigsee395ServiceRoleDefaultPolicyFB0C6FE5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersgetByIdsigsee395ServiceRoleDefaultPolicyFB0C6FE5",
        "Roles": [
          {
            "Ref": "sigusersgetByIdsigsee395ServiceRoleEB97FDFE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-getById-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersgetByIdsigsee395E06CD8A1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "b2d74059936e2d8cf22c797c5c70f5c8b96ba7df64a8635d61b6650d8e084de9.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersgetByIdsigsee395ServiceRoleEB97FDFE",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-getById-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersgetByIdsigsee395ServiceRoleDefaultPolicyFB0C6FE5",
        "sigusersgetByIdsigsee395ServiceRoleEB97FDFE"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-getById-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersgetByIdsigsee395LogRetentionCE5C9D93": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersgetByIdsigsee395E06CD8A1"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-getById-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersgetByIdsigsee395siggetByIdInvokePermissionsigsee395CAE82D67": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersgetByIdsigsee395E06CD8A1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-getById-sigsee-395/sig-getById-InvokePermission-sigsee-395"
      }
    },
    "sigusersloginsigsee395ServiceRole608ABD7E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-login-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersloginsigsee395ServiceRoleDefaultPolicy26C7D7DA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:InitiateAuth",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:Query",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395/index/email_index"
                  ]
                ]
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersloginsigsee395ServiceRoleDefaultPolicy26C7D7DA",
        "Roles": [
          {
            "Ref": "sigusersloginsigsee395ServiceRole608ABD7E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-login-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersloginsigsee39541BF9EEF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "fe05b213e07933cedbec1f34888e07aa884ae3702b28dda4eaba1f989533c4c1.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersloginsigsee395ServiceRole608ABD7E",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-login-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersloginsigsee395ServiceRoleDefaultPolicy26C7D7DA",
        "sigusersloginsigsee395ServiceRole608ABD7E"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-login-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersloginsigsee395LogRetentionA027A199": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersloginsigsee39541BF9EEF"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-login-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersloginsigsee395sigloginInvokePermissionsigsee3955ECF7481": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersloginsigsee39541BF9EEF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-login-sigsee-395/sig-login-InvokePermission-sigsee-395"
      }
    },
    "siguserslogoutsigsee395ServiceRole0CCD6218": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-logout-sigsee-395/ServiceRole/Resource"
      }
    },
    "siguserslogoutsigsee395ServiceRoleDefaultPolicy974C0A93": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:GlobalSignOut",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "siguserslogoutsigsee395ServiceRoleDefaultPolicy974C0A93",
        "Roles": [
          {
            "Ref": "siguserslogoutsigsee395ServiceRole0CCD6218"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-logout-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "siguserslogoutsigsee395BDC3453F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "e93f00aa8ed7812c94259ad64469e5616fc71275eb1a894311e3f03bbad44188.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "siguserslogoutsigsee395ServiceRole0CCD6218",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-logout-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "siguserslogoutsigsee395ServiceRoleDefaultPolicy974C0A93",
        "siguserslogoutsigsee395ServiceRole0CCD6218"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-logout-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "siguserslogoutsigsee395LogRetentionE3E4761E": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "siguserslogoutsigsee395BDC3453F"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-logout-sigsee-395/LogRetention/Resource"
      }
    },
    "siguserslogoutsigsee395siglogoutInvokePermissionsigsee39533240286": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "siguserslogoutsigsee395BDC3453F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-logout-sigsee-395/sig-logout-InvokePermission-sigsee-395"
      }
    },
    "sigusersrefreshTokensigsee395ServiceRoleA7DB5998": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-refreshToken-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersrefreshTokensigsee395ServiceRoleDefaultPolicyBFD2BBB4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:InitiateAuth",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersrefreshTokensigsee395ServiceRoleDefaultPolicyBFD2BBB4",
        "Roles": [
          {
            "Ref": "sigusersrefreshTokensigsee395ServiceRoleA7DB5998"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-refreshToken-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersrefreshTokensigsee395F20552B9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "6a39838bd0ff0993f0eecebdc49c8d0f5e17a85bc3f939a95a198efcdc006d16.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersrefreshTokensigsee395ServiceRoleA7DB5998",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-refreshToken-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersrefreshTokensigsee395ServiceRoleDefaultPolicyBFD2BBB4",
        "sigusersrefreshTokensigsee395ServiceRoleA7DB5998"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-refreshToken-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersrefreshTokensigsee395LogRetentionD52FC67D": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersrefreshTokensigsee395F20552B9"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-refreshToken-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersrefreshTokensigsee395sigrefreshTokenInvokePermissionsigsee3958BDC747B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersrefreshTokensigsee395F20552B9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-refreshToken-sigsee-395/sig-refreshToken-InvokePermission-sigsee-395"
      }
    },
    "sigusersresendConfirmationsigsee395ServiceRole61DFEC07": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-resendConfirmation-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersresendConfirmationsigsee395ServiceRoleDefaultPolicyE0407372": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:ResendConfirmationCode",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersresendConfirmationsigsee395ServiceRoleDefaultPolicyE0407372",
        "Roles": [
          {
            "Ref": "sigusersresendConfirmationsigsee395ServiceRole61DFEC07"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-resendConfirmation-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersresendConfirmationsigsee3952872FE2E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "b94a1cd0dec00b3d682906973f8c502dbf9debd3d899d3eed3493b427ff15cfb.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersresendConfirmationsigsee395ServiceRole61DFEC07",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-resendConfirmation-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersresendConfirmationsigsee395ServiceRoleDefaultPolicyE0407372",
        "sigusersresendConfirmationsigsee395ServiceRole61DFEC07"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-resendConfirmation-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersresendConfirmationsigsee395LogRetentionB3DD5CDA": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersresendConfirmationsigsee3952872FE2E"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-resendConfirmation-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersresendConfirmationsigsee395sigresendConfirmationInvokePermissionsigsee3953AFE6008": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersresendConfirmationsigsee3952872FE2E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-resendConfirmation-sigsee-395/sig-resendConfirmation-InvokePermission-sigsee-395"
      }
    },
    "siguserssignUpsigsee395ServiceRoleB28CE750": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-signUp-sigsee-395/ServiceRole/Resource"
      }
    },
    "siguserssignUpsigsee395ServiceRoleDefaultPolicy1AE89B98": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:SignUp",
              "Effect": "Allow",
              "Resource": {
                "Ref": "siguserPoolArnParamsigsee395Parameter"
              }
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "siguserssignUpsigsee395ServiceRoleDefaultPolicy1AE89B98",
        "Roles": [
          {
            "Ref": "siguserssignUpsigsee395ServiceRoleB28CE750"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-signUp-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "siguserssignUpsigsee39546EFABF6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "e0f5319573bcb441521c7c53a7b86dd1980a82f1b7275e67559ad4fc389d3bb0.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "siguserssignUpsigsee395ServiceRoleB28CE750",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-signUp-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "siguserssignUpsigsee395ServiceRoleDefaultPolicy1AE89B98",
        "siguserssignUpsigsee395ServiceRoleB28CE750"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-signUp-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "siguserssignUpsigsee395LogRetention3FB1A41F": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "siguserssignUpsigsee39546EFABF6"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-signUp-sigsee-395/LogRetention/Resource"
      }
    },
    "siguserssignUpsigsee395sigsignUpInvokePermissionsigsee3953335312B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "siguserssignUpsigsee39546EFABF6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-signUp-sigsee-395/sig-signUp-InvokePermission-sigsee-395"
      }
    },
    "sigusersupdateByIdsigsee395ServiceRoleAAC3DF0A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-updateById-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersupdateByIdsigsee395ServiceRoleDefaultPolicy051979E4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersupdateByIdsigsee395ServiceRoleDefaultPolicy051979E4",
        "Roles": [
          {
            "Ref": "sigusersupdateByIdsigsee395ServiceRoleAAC3DF0A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-updateById-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersupdateByIdsigsee395E51A3C21": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "d63073346ac174e86e9c44359736617a6cfb56ca88e099f3f59b640726b3a460.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersupdateByIdsigsee395ServiceRoleAAC3DF0A",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "usersTableName": "sig-users-sigsee-395",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-updateById-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersupdateByIdsigsee395ServiceRoleDefaultPolicy051979E4",
        "sigusersupdateByIdsigsee395ServiceRoleAAC3DF0A"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-updateById-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersupdateByIdsigsee395LogRetention8FC5F8DE": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersupdateByIdsigsee395E51A3C21"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-updateById-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersupdateByIdsigsee395sigupdateByIdInvokePermissionsigsee395785D8EFB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersupdateByIdsigsee395E51A3C21",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-updateById-sigsee-395/sig-updateById-InvokePermission-sigsee-395"
      }
    },
    "sigusersverifyTokensigsee395ServiceRoleC3535734": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-verifyToken-sigsee-395/ServiceRole/Resource"
      }
    },
    "sigusersverifyTokensigsee395ServiceRoleDefaultPolicy9D398EC0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:476324220602:table/sig-users-sigsee-395"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sigusersverifyTokensigsee395ServiceRoleDefaultPolicy9D398EC0",
        "Roles": [
          {
            "Ref": "sigusersverifyTokensigsee395ServiceRoleC3535734"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-verifyToken-sigsee-395/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sigusersverifyTokensigsee3955BDCEA1A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-476324220602-us-east-1",
          "S3Key": "4816791f71e79add94b344c7e6746c28ff76ea201b25b2affe3392a9bc1eb652.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "sigusersverifyTokensigsee395ServiceRoleC3535734",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "userPoolId": {
              "Ref": "siguserPoolIdParamsigsee395Parameter"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "sig-users-verifyToken-sigsee-395",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "sigusersverifyTokensigsee395ServiceRoleDefaultPolicy9D398EC0",
        "sigusersverifyTokensigsee395ServiceRoleC3535734"
      ],
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-verifyToken-sigsee-395/Resource",
        "aws:asset:path": "/home/vinarius/source/its/sig-backend",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "sigusersverifyTokensigsee395LogRetention404A8C48": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "sigusersverifyTokensigsee3955BDCEA1A"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-verifyToken-sigsee-395/LogRetention/Resource"
      }
    },
    "sigusersverifyTokensigsee395sigverifyTokenInvokePermissionsigsee395CAE1CEA6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sigusersverifyTokensigsee3955BDCEA1A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/sig-users-verifyToken-sigsee-395/sig-verifyToken-InvokePermission-sigsee-395"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/z2OzQrCMBCEn6X3dLXqwasVPIlIfYCypmtJmx/IJoqUvrtpFE+zs+x8OxvYwbrAF5eyG0ut7jDdAspRHB/2ih4NBfKiIXbRSxLpsJ00mnuHrXUdDQyXLKdoZVDOCoUGpsZpWghZr04r+c7APM2Cty0yU2A4LJI81FGOFGpkEl88TCnwpy5h8kYxJzcL7XqGs+ub1M6GvMqkVL1Xts+vf5VnsfSEgVfPagfVHqpiYKVKH1PQEDRf/QBvFpM5CAEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "sig-userLambdasStack-sigsee-395/CDKMetadata/Default"
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}